#!/bin/bash

set -o errexit -o pipefail  -o noclobber -o nounset

! getopt --test > /dev/null;
[ ${PIPESTATUS[0]} -ne 4 ] && echo '`getopt --test` failed' && exit 1
progname=$(basename $0)

! OPTS=$(getopt -o "o:drh" -l "no-args,output:,help" -n "$progname" -- "$@");

[ ${PIPESTATUS[0]} -ne 0 ] && echo "getopt has complained" && exit 2
eval set -- "$OPTS"

output=
delete=
rewrite=0

ext=bak
action=copying

message () {
    echo "copying $1 to $2"
}

while true; do
    case "$1" in
        -o|--output) 
            if [ -d "$2" ]; then
                output="$2"
                echo "output set to $output"
            else
                echo "Error: output $output is not a directory" && exit 1
            fi
            shift 2;;
        -r|--rewrite) rewrite=1; shift;;
        -d) delete=true; ext=old; action=moving; shift;;
        -h|--help) echo "bak [-r|--rewrite] [-o|--output OUTPUT] file(s)..."; exit; ;;
        --) shift; break;;
        *) echo "invalid option '$1'" && exit 3;;
    esac
done

[ $# -eq 0 ] && echo "select files/directories for $action" && exit 4
    
for i in "$@"; do
    base=$(basename $i)
    [ ! -e $i ] && echo "$base not found. skipping" && continue
    if [ -z $output ]; then
        output=$(dirname $(readlink -f $i)) 
    fi
    echo "$action $i to $output"
    target=$output/$base
    if [ -d $i ]; then
        target="$target-$ext"
        dir="-r"
    else
	dir=" "
        target="$target.$ext"
    fi
    echo "target: $target"
    if  [ -e $target ] && [ $rewrite -eq 0 ]; then
        echo "backup $target already exists. use -r to rewrite. skipping"
        continue
    fi
    cp $i $target $dir

    if [ ! -z $delete ]; then
        rm $i
    fi
done

