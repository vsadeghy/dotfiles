# pip2-install
# Autogenerated from man page /usr/share/man/man1/pip2-install.1.gz
complete -c pip2-install -s r -l requirement --description 'Install from the given requirements file.'
complete -c pip2-install -s c -l constraint --description 'Constrain versions using the given constraints file.'
complete -c pip2-install -l no-deps --description 'Don\\(aqt install package dependencies.'
complete -c pip2-install -l pre --description 'Include pre-release and development versions.'
complete -c pip2-install -s e -l editable --description 'Install a project in editable mode (i. e.'
complete -c pip2-install -s t -l target --description 'Install packages into <dir>.'
complete -c pip2-install -l platform --description 'Only use wheels compatible with <platform>.'
complete -c pip2-install -l python-version --description 'The Python interpreter version to use for wheel and "Requires-Python" compati…'
complete -c pip2-install -l implementation --description 'Only use wheels compatible with Python implementation <implementation>, e. g.'
complete -c pip2-install -l abi --description 'Only use wheels compatible with Python abi <abi>, e. g.  \\(aqpypy_41\\(aq.'
complete -c pip2-install -l user --description 'Install to the Python user install directory for your platform.  Typically ~/.'
complete -c pip2-install -l root --description 'Install everything relative to this alternate root directory.'
complete -c pip2-install -l prefix --description 'Installation prefix where lib, bin and other top-level folders are placed.'
complete -c pip2-install -s b -l build --description 'Directory to unpack packages into and build in.'
complete -c pip2-install -l src --description 'Directory to check out editable projects into.'
complete -c pip2-install -s U -l upgrade --description 'Upgrade all specified packages to the newest available version.'
complete -c pip2-install -l upgrade-strategy --description 'Determines how dependency upgrading should be handled [default: only-if-neede…'
complete -c pip2-install -l force-reinstall --description 'Reinstall all packages even if they are already up-to-date.'
complete -c pip2-install -s I -l ignore-installed --description 'Ignore the installed packages, overwriting them.'
complete -c pip2-install -l ignore-requires-python --description 'Ignore the Requires-Python information.'
complete -c pip2-install -l no-build-isolation --description 'Disable isolation when building a modern source distribution.'
complete -c pip2-install -l use-pep517 --description 'Use PEP 517 for building source distributions (use --no-use-pep517 to force l…'
complete -c pip2-install -l install-option --description 'Extra arguments to be supplied to the setup.'
complete -c pip2-install -l global-option --description 'Extra global options to be supplied to the setup.'
complete -c pip2-install -l compile --description 'Compile Python source files to bytecode.'
complete -c pip2-install -l no-compile --description 'Do not compile Python source files to bytecode.'
complete -c pip2-install -l no-warn-script-location --description 'Do not warn when installing scripts outside PATH.'
complete -c pip2-install -l no-warn-conflicts --description 'Do not warn about broken dependencies.'
complete -c pip2-install -l no-binary --description 'Do not use binary packages.'
complete -c pip2-install -l only-binary --description 'Do not use source packages.'
complete -c pip2-install -l prefer-binary --description 'Prefer older binary packages over newer source packages.'
complete -c pip2-install -l no-clean --description 'Don\\(aqt clean up build directories.'
complete -c pip2-install -l require-hashes --description 'Require a hash to check each requirement against, for repeatable installs.'
complete -c pip2-install -l progress-bar --description 'Specify type of progress to be displayed [off|on|ascii|pretty|emoji] (default…'

