# rasm2
# Autogenerated from man page /usr/share/man/man1/rasm2.1.gz
complete -c rasm2 -s a --description 'Set architecture plugin.'
complete -c rasm2 -s A --description 'Show analysis information of given hexpair string.'
complete -c rasm2 -s b --description 'Set architecture bits.'
complete -c rasm2 -s B --description 'Binary input/output (\\-l is mandatory for binary input).'
complete -c rasm2 -s c --description 'Select specific CPU (depends on \\-a arch).'
complete -c rasm2 -s C --description 'Output in C format.'
complete -c rasm2 -s d --description 'Disassemble hexpair bytes.  rasm2 \\-d 9090.'
complete -c rasm2 -s D --description 'Disassemble showing hexpair and opcode.'
complete -c rasm2 -s e --description 'Use big endian (or swap endianness if used more than once).'
complete -c rasm2 -s E --description 'Output disassembled instructions in ESIL format.'
complete -c rasm2 -s f --description 'Read data from file instead of ARG.'
complete -c rasm2 -s F --description 'Specify input and/or output filters (att2intel, x86. pseudo, . ).'
complete -c rasm2 -s h --description 'Show usage help message.'
complete -c rasm2 -o hh --description 'Show long help message including supported assembler directives.'
complete -c rasm2 -s l --description 'Input/Output length.'
complete -c rasm2 -s i --description 'Ignore/skip N bytes from the beginning of the input buffer.'
complete -c rasm2 -s L --description 'List supported asm plugins.'
complete -c rasm2 -s o --description 'Offset of the opcode to assemble (default is 0).'
complete -c rasm2 -s @ --description 'Alias for -o.'
complete -c rasm2 -s O --description 'output to file, for example \'rasm2 \\-BF a a. asm\'.'
complete -c rasm2 -s r --description 'Show output in r2 script.'
complete -c rasm2 -s s --description 'Select syntax output (intel, att).'
complete -c rasm2 -s w --description 'Describe opcode (whats op).'
complete -c rasm2 -s x --description 'Use hex dwords instead of hexpairs in the assembler output.'
complete -c rasm2 -s q --description 'Quiet output (handy for -L, -v, .'
complete -c rasm2 -o '.intel_syntax' --description 'Use intel syntax rather than att:w.'
complete -c rasm2 -o '.att_syntax' --description 'Use ATT syntax rather than flu :w dentify the region fof aslerrger.'
complete -c rasm2 -o string --description 'dentify the region fof aslerrger.'
complete -c rasm2 -o '.align' --description '.'
complete -c rasm2 -o '.arch' --description '.'
complete -c rasm2 -o '.arm' --description '.'
complete -c rasm2 -o '.ascii' --description '.'
complete -c rasm2 -o '.bits' --description '.'
complete -c rasm2 -o '.data' --description '.'
complete -c rasm2 -o '.equ' --description '.'
complete -c rasm2 -o '.fill' --description '.'
complete -c rasm2 -o '.glob' --description '.'
complete -c rasm2 -o '.hex' --description '.'
complete -c rasm2 -o '.int16' --description '.'
complete -c rasm2 -o '.int32' --description '.'
complete -c rasm2 -o '.int64' --description '.'
complete -c rasm2 -o '.kernel' --description '.'
complete -c rasm2 -o '.offset' --description '.'
complete -c rasm2 -o '.org' --description '.'
complete -c rasm2 -o '.os' --description '.'
complete -c rasm2 -o '.short' --description '.'
complete -c rasm2 -o '.text' --description '.'
complete -c rasm2 -o '.thumb' --description 'El EXAMPLES Pp Assemble opcode: Pp $ rasm2 \\-a x86 \\-b 32 \'mov eax, 33\' Pp Diâ€¦'

