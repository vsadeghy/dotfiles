// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "shift+space shift+h",
    "command": "workbench.action.previousEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  {
    "key": "shift+space e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "shift+space x",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        // "workbench.action.toggleTabsVisibility",
        "workbench.action.toggleStatusbarVisibility",
        "workbench.action.toggleActivityBarVisibility",
        "workbench.action.toggleMenuBar",
        "breadcrumbs.toggle"
      ]
    }
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+n",
    "command": "-extension.vim_ctrl+n",
    "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+shift+n",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+shift+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  // {
  //   "key": "shift+;",
  //   "command": "vim.showQuickpickCmdLine",
  //   "when": "editorTextFocus && vim.mode != 'Insert'"
  // },
  {
    "key": "ctrl+shift+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+space shift+m",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "shift+space m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "shift+space shift+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.terminal.kill"
  },
  {
    "key": "ctrl+shift+alt+n",
    "command": "welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+alt+meta+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+,",
    "command": "workbench.action.openSettings",
    "args": {
      "openToSide": true
    }
  },
  {
    "key": "ctrl+shift+,",
    "command": "workbench.action.openSettingsJson",
    "args": {
      "openToSide": true
    }
  },
  {
    "key": "ctrl+alt+,",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.openGlobalKeybindingsFile",
        "workbench.action.moveEditorToNextGroup"
      ]
    }
  },
  {
    "key": "shift+space shift+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "shift+space g",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": ["git-graph.view", "workbench.action.moveEditorToNextGroup"]
    }
  },
  {
    "key": "ctrl+[",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "filesExplorerFocus"
  },
  {
    "key": "shift+space shift+p",
    "command": "workbench.panel.repl.view.focus"
  },
  {
    "key": "shift+space shift+u",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "shift+space shift+i",
    "command": "workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+k ctrl+h",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "shift+space shift+o",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "shift+space shift+l",
    "command": "workbench.action.nextEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+alt+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+r r",
    "command": "-yarn-script.runScriptLast",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+space shift+w",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  }
]
